syntax = "proto3";

option go_package = "github.com/dylan-p-wong/kvstore/api";

package api;

// The KV service definition.
service KV {
  // Client
  rpc Put(PutRequest) returns (PutResponse) {}
  rpc Get(GetRequest) returns (GetResponse) {}

  // Raft
  rpc AppendEntries(AppendEntriesRequest) returns (AppendEntriesResponse) {}
  rpc RequestVote(RequestVoteRequest) returns (RequestVoteResponse) {}
}

message PutRequest {
  bytes key = 1;
  bytes value = 2;
}

message PutResponse {
  bool success = 1;
}

message GetRequest {
  bytes key = 1;
}

message GetResponse {
  bool success = 1;
  bytes key = 2;
  bytes value = 3;
}

message LogEntry {
	uint64 Index = 1;
	uint64 Term = 2;
	string CommandName = 3;
}

message AppendEntriesRequest {
  uint64 term = 1;
  uint64 leaderId = 2;
  uint64 prevLogIndex = 3;
  uint64 prevLogTerm = 4;
  repeated LogEntry entries = 5;
  uint64 leaderCommit = 6;
}

message AppendEntriesResponse {
  uint64 term = 1;
  bool success = 2;
}

message RequestVoteRequest {
  uint64 term = 1;
  uint64 candidateId = 2;
  uint64 lastLogIndex = 3;
  uint64 lastLogTerm = 4;
}

message RequestVoteResponse {
  uint64 term = 1;
  bool voteGranted = 2;
}
